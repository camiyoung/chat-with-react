{"version":3,"sources":["components/Chat/Chat.jsx","components/Join/Join.jsx","components/Content/Header.jsx","components/Content/RoomList/Room.jsx","components/Content/RoomList/RoomList.jsx","components/Content/ChatRoom/UserList/UserList.jsx","components/Content/ChatRoom/Messages/Message.jsx","components/Content/ChatRoom/Messages/Messages.jsx","components/Content/ChatRoom/InputForm.jsx","components/Content/ChatRoom/ChatRoom.jsx","components/Content/Content.jsx","components/SideBar/Buttons.jsx","components/SideBar/MyChat.jsx","components/SideBar/MyChatList.jsx","components/SideBar/SideBar.jsx","app.jsx","service/http.js","index.js","service/chat.js"],"names":["socket","Join","chatService","setUsername","useState","name","setName","history","useHistory","className","placeholder","type","onChange","event","target","value","onClick","preventDefault","signup","catch","error","console","push","pathname","state","username","Header","currentRoom","user","title","Room","room","onClickRoom","RoomList","roomList","map","UserList","users","icon","faUsers","size","Message","message","sender","Messages","messages","msg","InputForm","sendMessage","textRef","useRef","formRef","ref","onSubmit","e","current","reset","ChatRoom","myChatList","setMessages","userList","setUserList","useEffect","forEach","sentRoom","newmsg","Content","memo","Buttons","onRoomListBtn","setActiveStatus","faListAlt","faEdit","MyChat","hasNew","MyChatList","addMyChat","SideBar","onNewChatBtn","activeForm","setActiveForm","inputRef","Chat","baseURL","setCurrentRoom","activedRooms","setActivedRooms","setMessage","setUsers","setMyChatList","io","emit","getRoomList","useCallback","a","rooms","getRoomUsers","getRoom","getMyChatRoom","getMyRooms","myChatRooms","addToMyChatList","joinRoom","then","data","err","mychatlist","alreadyIn","roominfo","roomlist","postRoom","on","App","basename","process","exact","path","to","HttpClient","this","url","options","fetch","headers","res","json","status","Error","http","method","body","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46832665.chunk.js","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport Content from '../Content/Content';\nimport SideBar from '../SideBar/SideBar';\nimport { useState } from 'react';\nimport io from 'socket.io-client';\n\nimport { useHistory } from 'react-router';\n\nlet socket;\nconst Chat = ({ chatService, username, baseURL }) => {\n  const [currentRoom, setCurrentRoom] = useState();\n  const [activedRooms, setActivedRooms] = useState([]);\n\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState();\n\n  const [users, setUsers] = useState();\n  const [myChatList, setMyChatList] = useState([]);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    socket = io(baseURL);\n\n    socket.emit('signin', { username });\n    setCurrentRoom('list');\n  }, [username]);\n\n  const getRoomList = useCallback(async () => {\n    const rooms = await chatService.getRoomList();\n    return rooms;\n  }, [chatService]);\n\n  const getRoomUsers = useCallback(\n    async (title) => {\n      const room = await chatService.getRoom(title);\n      return room;\n    },\n    [chatService]\n  );\n  const getMyChatRoom = useCallback(\n    async (username) => {\n      const myChatRooms = await chatService.getMyRooms(username);\n      return myChatRooms;\n    },\n    [chatService]\n  );\n\n  const addToMyChatList = useCallback(\n    async (title) => {\n      chatService.joinRoom(username, title);\n    },\n    [chatService, username]\n  );\n  async function addMyChat(title) {\n    chatService\n      .joinRoom(username, title)\n      .then((data) => setMyChatList(data))\n      .catch((err) => console.error(err));\n  }\n  useEffect(() => {\n    (async function () {\n      const rooms = await getRoomList();\n      setActivedRooms(rooms);\n    })();\n  }, [getRoomList]);\n\n  useEffect(() => {\n    (async function () {\n      const mychatlist = await getMyChatRoom(username);\n      setMyChatList(mychatlist.rooms);\n    })();\n  }, [currentRoom, getMyChatRoom, username]);\n\n  useEffect(() => {\n    if (myChatList) {\n      myChatList.forEach((room) => {\n        if (room.title === currentRoom) {\n          setMessages(room.messages);\n        }\n      });\n    }\n  }, [currentRoom, myChatList]);\n\n  useEffect(() => {\n    chatService\n      .getRoom(currentRoom)\n      .then((data) => {\n        setUsers(data.users);\n      })\n      .catch((error) => console.error(error));\n  }, [chatService, currentRoom]);\n\n  const sendMessage = useCallback(\n    (message, sentRoom) => {\n      if (message) {\n        socket.emit('sendMessage', message, sentRoom, username);\n      }\n    },\n    [username]\n  );\n\n  const onClickRoom = useCallback(\n    async (title) => {\n      let alreadyIn = false;\n      const myRoomInfo = myChatList;\n\n      myRoomInfo.forEach((room) => {\n        if (room.title === title) alreadyIn = true;\n      });\n      if (!alreadyIn) {\n        await addToMyChatList(title);\n        setMyChatList((mychatlist) => [...mychatlist, { title, messages: [] }]);\n        socket.emit('user list', { title });\n        socket.emit('join', title);\n      }\n      const roominfo = await getRoomUsers(title);\n      setUsers(roominfo);\n      setCurrentRoom(title);\n    },\n    [myChatList, addToMyChatList, getRoomUsers]\n  );\n\n  const onRoomListBtn = async () => {\n    setCurrentRoom('list');\n    history.push('/chat');\n    const roomlist = await getRoomList();\n    setActivedRooms(roomlist);\n  };\n\n  const onNewChatBtn = useCallback(\n    async (title) => {\n      setActivedRooms((activedRooms) => {\n        return [...activedRooms, { title }];\n      });\n      await chatService.postRoom(username, title);\n      onClickRoom(title);\n    },\n    [chatService, onClickRoom, username]\n  );\n\n  useEffect(() => {\n    socket.on('message', (message) => {\n      setMessage(message);\n    });\n    socket.on('users', (room) => {\n      setUsers(room);\n    });\n  }, []);\n\n  return (\n    <div className='app'>\n      <SideBar\n        roomList={myChatList}\n        addMyChat={addMyChat}\n        message={message}\n        currentRoom={currentRoom}\n        onClickRoom={onClickRoom}\n        onRoomListBtn={onRoomListBtn}\n        onNewChatBtn={onNewChatBtn}\n        username={username}\n      />\n      <Content\n        roomList={activedRooms}\n        currentRoom={currentRoom}\n        onClickRoom={onClickRoom}\n        addMyChat={addMyChat}\n        user={username}\n        sendMessage={sendMessage}\n        messages={messages}\n        users={users}\n        myChatList={myChatList}\n        message={message}\n      />\n    </div>\n  );\n};\nexport default Chat;\n","import './join.css';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nconst Join = ({ chatService, setUsername }) => {\n  const [name, setName] = useState('');\n  const history = useHistory();\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setUsername(name);\n    chatService.signup(name).catch((error) => console.error(error));\n    history.push({ pathname: `/chat`, state: { username: name } });\n  };\n\n  return (\n    <div className='join'>\n      <div className='join_container'>\n        <h1 className='heading'> Chat Service with React 💌 </h1>\n        <div className='form'>\n          <input\n            placeholder='Enter Username...'\n            className='joinInput'\n            type='text'\n            onChange={(event) => setName(event.target.value)}\n          />\n          <button className='join_button' type='submit' onClick={onSubmit}>\n            Sign In\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Join;\n","import React from 'react';\n\nconst Header = ({ currentRoom, user }) => {\n  const title = currentRoom;\n  return (\n    <header className='header'>\n      {title ? (\n        <h1 className='headertext'>{title}</h1>\n      ) : (\n        <h1 className='headertext'>현재 목록</h1>\n      )}\n      <h4 className='headerUser'> {user}</h4>\n    </header>\n  );\n};\nexport default Header;\n","import React from 'react';\n\nconst Room = ({ room, onClickRoom }) => {\n  const onRoom = () => {\n    onClickRoom(room);\n  };\n  return (\n    <li className='room ' onClick={onRoom}>\n      <div className='title'>{room}</div>\n    </li>\n  );\n};\nexport default Room;\n","import React from 'react';\nimport Room from './Room';\n\nconst RoomList = ({ roomList, onClickRoom }) => {\n  return (\n    <div>\n      <ul className='rooms'>\n        {roomList.map((room) => (\n          <Room room={room.title} onClickRoom={onClickRoom} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default RoomList;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nconst UserList = ({ users }) => {\n  return (\n    <ul className='usersList'>\n      <li className='users-icon'>\n        <FontAwesomeIcon icon={faUsers} size='lg' />\n      </li>\n      {users &&\n        users.map((user) => (\n          <li className='user'>\n            <div className='username'>{user}</div>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default UserList;\n","import React from 'react';\n\nconst Message = ({ user, message }) => {\n  let sender = message.sender === user ? 'me' : 'others';\n  if (message.user === 'admin') sender = 'admin';\n\n  return (\n    <li>\n      <div className={`message ${sender}`}>\n        <div className={`text ${sender}`}>{message.message}</div>\n\n        {sender !== 'me' && sender !== 'admin' && (\n          <div className='sender'>{message.sender}</div>\n        )}\n      </div>\n    </li>\n  );\n};\n\nexport default Message;\n","import React from 'react';\n\nimport Message from './Message';\n\nconst Messages = ({ messages, user }) => {\n  return (\n    <ul className='messages'>\n      {messages && messages.map((msg) => <Message user={user} message={msg} />)}\n    </ul>\n  );\n};\n\nexport default Messages;\n","import React, { useRef } from 'react';\n\nconst InputForm = ({ sendMessage, currentRoom }) => {\n  const textRef = useRef();\n  const formRef = useRef();\n  const onSubmit = (e) => {\n    e.preventDefault();\n    sendMessage(textRef.current.value, currentRoom);\n    formRef.current.reset();\n  };\n  return (\n    <form ref={formRef} className='inputform' onSubmit={onSubmit}>\n      <input ref={textRef} className='textInput' type='text' />\n    </form>\n  );\n};\n\nexport default InputForm;\n","import React, { useEffect, useState } from 'react';\nimport UserList from './UserList/UserList';\nimport Messages from './Messages/Messages';\nimport InputForm from './InputForm';\nconst ChatRoom = ({\n  currentRoom,\n  message,\n  user,\n  users,\n  sendMessage,\n  myChatList,\n}) => {\n  const [messages, setMessages] = useState([]);\n  const [userList, setUserList] = useState();\n  useEffect(() => {\n    if (myChatList) {\n      myChatList.forEach((room) => {\n        if (room.title === currentRoom) {\n          setMessages(room.messages);\n        }\n      });\n    }\n  }, [currentRoom, myChatList]);\n\n  useEffect(() => {\n    if (message) {\n      if (currentRoom === message.sentRoom) {\n        setMessages((messages) => {\n          const newmsg = { sender: message.sender, message: message.message };\n          return [...messages, newmsg];\n        });\n      }\n    }\n  }, [message, currentRoom]);\n\n  useEffect(() => {\n    if (users) {\n      if (currentRoom === users.title) {\n        setUserList(users.users);\n      }\n    }\n  }, [users, currentRoom]);\n  return (\n    <div className='chatRoom'>\n      <div className='chatArea'>\n        <Messages messages={messages} user={user} />\n        <InputForm\n          sendMessage={sendMessage}\n          currentRoom={currentRoom}\n          setMessages={setMessages}\n        />\n      </div>\n\n      <UserList users={userList} />\n    </div>\n  );\n};\nexport default ChatRoom;\n","import React, { memo } from 'react';\nimport './content.css';\n\nimport Header from './Header';\nimport RoomList from './RoomList/RoomList';\nimport ChatRoom from './ChatRoom/ChatRoom';\n\nconst Content = memo(\n  ({\n    currentRoom,\n    roomList,\n    onClickRoom,\n    user,\n    sendMessage,\n    users,\n    message,\n    myChatList,\n  }) => {\n    return (\n      <div className='content'>\n        <Header currentRoom={currentRoom} user={user} />\n        <div className='chatContainer'>\n          {currentRoom === 'list' ? (\n            <RoomList roomList={roomList} onClickRoom={onClickRoom} />\n          ) : (\n            <ChatRoom\n              message={message}\n              user={user}\n              users={users}\n              sendMessage={sendMessage}\n              currentRoom={currentRoom}\n              myChatList={myChatList}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default Content;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faListAlt, faEdit } from '@fortawesome/free-regular-svg-icons';\n\nconst Buttons = ({ onRoomListBtn, setActiveStatus }) => {\n  return (\n    <div className='buttons'>\n      <div className='btn_roomlist' onClick={onRoomListBtn}>\n        <FontAwesomeIcon icon={faListAlt} size='lg' />\n      </div>\n      <div className='btn_newchat' onClick={setActiveStatus}>\n        <FontAwesomeIcon icon={faEdit} size='lg' />\n      </div>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst MyChat = ({ title, onClickRoom, hasNew }) => {\n  const history = useHistory();\n  const onRoom = () => {\n    onClickRoom(title);\n    history.push(`/chat/${title}`);\n  };\n\n  return (\n    <li onClick={onRoom} className='mychat'>\n      <span className='chat_title'>{title}</span>\n      <span className={`isNew ${hasNew}`}>!</span>\n    </li>\n  );\n};\n\nexport default MyChat;\n","import React from 'react';\nimport MyChat from './MyChat';\n\nconst MyChatList = ({\n  roomList,\n  onClickRoom,\n  addMyChat,\n  username,\n  message,\n  currentRoom,\n}) => {\n  return (\n    <ul className='myChatRoomList'>\n      {roomList &&\n        roomList.map((room) => (\n          <MyChat\n            title={room.title}\n            onClickRoom={onClickRoom}\n            addMyChat={addMyChat}\n            username={username}\n            hasNew={room.hasNew}\n          />\n        ))}\n    </ul>\n  );\n};\n\nexport default MyChatList;\n","import React, { useRef, useState } from 'react';\nimport './sideBar.css';\nimport Buttons from './Buttons';\nimport MyChatList from './MyChatList';\nimport { useHistory } from 'react-router';\n\nconst SideBar = ({\n  roomList,\n  onClickRoom,\n  onRoomListBtn,\n  onNewChatBtn,\n  addMyChat,\n  username,\n  message,\n  currentRoom,\n}) => {\n  const [activeForm, setActiveForm] = useState(false);\n\n  const inputRef = useRef();\n  const history = useHistory();\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setActiveForm(false);\n    if (inputRef.current.value !== '') {\n      onNewChatBtn(inputRef.current.value);\n\n      history.push(`/chat/${inputRef.current.value}`);\n    }\n  };\n\n  const onClose = (e) => {\n    e.preventDefault();\n    setActiveForm(false);\n  };\n  const setActiveStatus = () => {\n    setActiveForm(!activeForm);\n  };\n\n  return (\n    <div className='sideBar'>\n      {activeForm ? (\n        <form className='make-form'>\n          <input ref={inputRef} />\n          <div className='form_buttons'>\n            <div className='button make' onClick={onSubmit}>\n              <h3>생성</h3>\n            </div>\n            <div className='button close' onClick={onClose}>\n              <h3>닫기</h3>\n            </div>\n          </div>\n        </form>\n      ) : (\n        <Buttons\n          onRoomListBtn={onRoomListBtn}\n          setActiveStatus={setActiveStatus}\n          onClickRoom={onClickRoom}\n          username={username}\n        />\n      )}\n      <MyChatList\n        roomList={roomList}\n        onClickRoom={onClickRoom}\n        addMyChat={addMyChat}\n        username={username}\n        currentRoom={currentRoom}\n        message={message}\n      />\n    </div>\n  );\n};\n\nexport default SideBar;\n","import './app.css';\n\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport Join from './components/Join/Join';\nimport Chat from './components/Chat/Chat';\nimport { useState } from 'react';\n\nfunction App({ chatService, baseURL }) {\n  const [username, setUsername] = useState();\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path='/'>\n          {!username && (\n            <Join\n              chatService={chatService}\n              setUsername={(name) => {\n                setUsername(name);\n              }}\n            />\n          )}\n        </Route>\n\n        <Route path='/chat'>\n          {username ? (\n            <Chat\n              chatService={chatService}\n              username={username}\n              baseURL={baseURL}\n            />\n          ) : (\n            <Redirect to='/' />\n          )}\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","export default class HttpClient {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n  async fetch(url, options) {\n    const res = await fetch(`${this.baseURL}${url}`, {\n      ...options,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    let data;\n    try {\n      data = await res.json();\n    } catch (error) {\n      console.error(error);\n    }\n    if (res.status > 299 || res.status < 200) {\n      const message = 'http통신 문제 🤪';\n      throw new Error(message);\n    }\n\n    return data;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app.jsx';\nimport HttpClient from './service/http';\nimport ChatService from './service/chat';\n\nconst baseURL = process.env.REACT_APP_BASE_URL;\nconst httpClient = new HttpClient(baseURL);\nconst chatService = new ChatService(httpClient);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App chatService={chatService} baseURL={baseURL} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export default class ChatService {\n  constructor(http) {\n    this.http = http;\n  }\n\n  async signup(username) {\n    return this.http.fetch(`/signup`, {\n      method: 'POST',\n      body: JSON.stringify({ username }),\n    });\n  }\n\n  async getRoomList() {\n    return this.http.fetch(`/chat`, {\n      method: 'GET',\n    });\n  }\n\n  async getMyRooms(username) {\n    return this.http.fetch(`/user/${username}`, {\n      method: 'GET',\n    });\n  }\n\n  async postRoom(username, title) {\n    return this.http.fetch('/chat', {\n      method: 'POST',\n      body: JSON.stringify({ username, title }),\n    });\n  }\n\n  async joinRoom(username, title) {\n    return this.http.fetch(`/user/${title}`, {\n      method: 'POST',\n      body: JSON.stringify({ username }),\n    });\n  }\n\n  async getRoom(title) {\n    return this.http.fetch(`/chat/${title}`, {\n      method: 'GET',\n    });\n  }\n}\n"],"sourceRoot":""}